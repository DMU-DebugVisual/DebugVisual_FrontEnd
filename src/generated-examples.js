// 이 파일은 스크립트에 의해 자동으로 생성되었습니다. 직접 수정하지 마세요.
export const jsonExamples = [
  {
    "name": "binaryTree.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(n log n)\",\r\n    \"spaceComplexity\": \"O(n)\",\r\n    \"opCounts\": {\r\n      \"call\": 15,\r\n      \"return\": 15,\r\n      \"assign\": 10,\r\n      \"compare\": 10,\r\n      \"branch\": 10,\r\n      \"ds_op\": 5,\r\n      \"io\": 5\r\n    }\r\n  },\r\n  \"events\": [\r\n    {\r\n      \"t\": 1,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 29},\r\n      \"var\": \"root\",\r\n      \"before\": null,\r\n      \"after\": null\r\n    },\r\n    {\r\n      \"t\": 2,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 30},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": null},\r\n        {\"name\": \"data\", \"value\": 50}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 3,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"root == NULL\",\r\n      \"read\": [\r\n        {\"ref\": \"root\", \"value\": null}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 4,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"root == NULL\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 5,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 18},\r\n      \"fn\": \"createNode\",\r\n      \"args\": [\r\n        {\"name\": \"data\", \"value\": 50}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 6,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 11},\r\n      \"var\": \"newNode\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 7,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 11},\r\n      \"target\": \"bst\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x01\", 50],\r\n      \"viz\": {\r\n        \"type\": \"bst\",\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 50, \"left\": null, \"right\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 8,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 13},\r\n      \"fn\": \"createNode\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 9,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 30},\r\n      \"var\": \"root\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 10,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 18},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 11,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 31},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x01\"},\r\n        {\"name\": \"data\", \"value\": 30}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 12,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 19},\r\n      \"expr\": \"data < root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 30},\r\n        {\"ref\": \"root->data\", \"value\": 50}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 13,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 19},\r\n      \"expr\": \"data < root->data\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 14,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": null},\r\n        {\"name\": \"data\", \"value\": 30}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 1,\r\n        \"note\": \"Inserting 30 to left of 50\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 15,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 17},\r\n      \"fn\": \"createNode\",\r\n      \"args\": [\r\n        {\"name\": \"data\", \"value\": 30}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 16,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 11},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x01\",\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 17,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 11},\r\n      \"target\": \"bst\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x02\", 30],\r\n      \"viz\": {\r\n        \"type\": \"bst\",\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 50, \"left\": \"0x02\", \"right\": null},\r\n          {\"id\": \"0x02\", \"value\": 30, \"left\": null, \"right\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 18,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 13},\r\n      \"fn\": \"createNode\",\r\n      \"value\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 19,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 20,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 21,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 32},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x01\"},\r\n        {\"name\": \"data\", \"value\": 70}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 22,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 20},\r\n      \"expr\": \"data > root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 70},\r\n        {\"ref\": \"root->data\", \"value\": 50}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 23,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 20},\r\n      \"expr\": \"data > root->data\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 24,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 17},\r\n      \"fn\": \"createNode\",\r\n      \"args\": [\r\n        {\"name\": \"data\", \"value\": 70}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 25,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 11},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 26,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 11},\r\n      \"target\": \"bst\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x03\", 70],\r\n      \"viz\": {\r\n        \"type\": \"bst\",\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 50, \"left\": \"0x02\", \"right\": \"0x03\"},\r\n          {\"id\": \"0x02\", \"value\": 30, \"left\": null, \"right\": null},\r\n          {\"id\": \"0x03\", \"value\": 70, \"left\": null, \"right\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 27,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 13},\r\n      \"fn\": \"createNode\",\r\n      \"value\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 28,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 20},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 29,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 30,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 33},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x01\"},\r\n        {\"name\": \"data\", \"value\": 20}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 31,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 19},\r\n      \"expr\": \"data < root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 20},\r\n        {\"ref\": \"root->data\", \"value\": 50}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 32,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x02\"},\r\n        {\"name\": \"data\", \"value\": 20}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 1\r\n      }\r\n    },\r\n    {\r\n      \"t\": 33,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 19},\r\n      \"expr\": \"data < root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 20},\r\n        {\"ref\": \"root->data\", \"value\": 30}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 34,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 17},\r\n      \"fn\": \"createNode\",\r\n      \"args\": [\r\n        {\"name\": \"data\", \"value\": 20}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 35,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 11},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x03\",\r\n      \"after\": \"0x04\"\r\n    },\r\n    {\r\n      \"t\": 36,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 11},\r\n      \"target\": \"bst\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x04\", 20],\r\n      \"viz\": {\r\n        \"type\": \"bst\",\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 50, \"left\": \"0x02\", \"right\": \"0x03\"},\r\n          {\"id\": \"0x02\", \"value\": 30, \"left\": \"0x04\", \"right\": null},\r\n          {\"id\": \"0x03\", \"value\": 70, \"left\": null, \"right\": null},\r\n          {\"id\": \"0x04\", \"value\": 20, \"left\": null, \"right\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 37,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 13},\r\n      \"fn\": \"createNode\",\r\n      \"value\": \"0x04\"\r\n    },\r\n    {\r\n      \"t\": 38,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x04\"\r\n    },\r\n    {\r\n      \"t\": 39,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 40,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 41,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 34},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x01\"},\r\n        {\"name\": \"data\", \"value\": 40}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 42,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 19},\r\n      \"expr\": \"data < root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 40},\r\n        {\"ref\": \"root->data\", \"value\": 50}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 43,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"insert\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x02\"},\r\n        {\"name\": \"data\", \"value\": 40}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 1\r\n      }\r\n    },\r\n    {\r\n      \"t\": 44,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 20},\r\n      \"expr\": \"data > root->data\",\r\n      \"read\": [\r\n        {\"ref\": \"data\", \"value\": 40},\r\n        {\"ref\": \"root->data\", \"value\": 30}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 45,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 17},\r\n      \"fn\": \"createNode\",\r\n      \"args\": [\r\n        {\"name\": \"data\", \"value\": 40}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 46,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 11},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x04\",\r\n      \"after\": \"0x05\"\r\n    },\r\n    {\r\n      \"t\": 47,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 11},\r\n      \"target\": \"bst\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x05\", 40],\r\n      \"viz\": {\r\n        \"type\": \"bst\",\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 50, \"left\": \"0x02\", \"right\": \"0x03\"},\r\n          {\"id\": \"0x02\", \"value\": 30, \"left\": \"0x04\", \"right\": \"0x05\"},\r\n          {\"id\": \"0x03\", \"value\": 70, \"left\": null, \"right\": null},\r\n          {\"id\": \"0x04\", \"value\": 20, \"left\": null, \"right\": null},\r\n          {\"id\": \"0x05\", \"value\": 40, \"left\": null, \"right\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 48,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 13},\r\n      \"fn\": \"createNode\",\r\n      \"value\": \"0x05\"\r\n    },\r\n    {\r\n      \"t\": 49,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 20},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x05\"\r\n    },\r\n    {\r\n      \"t\": 50,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 51,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 22},\r\n      \"fn\": \"insert\",\r\n      \"value\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 52,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 36},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"Inorder Traversal\"\r\n    },\r\n    {\r\n      \"t\": 53,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 37},\r\n      \"fn\": \"inorder\",\r\n      \"args\": [\r\n        {\"name\": \"root\", \"value\": \"0x01\"}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 54,\r\n      \"kind\": \"note\",\r\n      \"loc\": {\"line\": 25},\r\n      \"text\": \"Recursive inorder traversal: left -> root -> right\"\r\n    },\r\n    {\r\n      \"t\": 55,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 27},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"20\"\r\n    },\r\n    {\r\n      \"t\": 56,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 27},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"30\"\r\n    },\r\n    {\r\n      \"t\": 57,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 27},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"40\"\r\n    },\r\n    {\r\n      \"t\": 58,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 27},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"50\"\r\n    },\r\n    {\r\n      \"t\": 59,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 27},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"70\"\r\n    },\r\n    {\r\n      \"t\": 60,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 28},\r\n      \"fn\": \"inorder\",\r\n      \"value\": null\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "bubbleSort.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(n^2)\",\r\n    \"spaceComplexity\": \"O(1)\",\r\n    \"opCounts\": {\r\n      \"comparisons\": 10,\r\n      \"swaps\": 4,\r\n      \"assignments\": 12,\r\n      \"prints\": 5\r\n    }\r\n  },\r\n  \"events\": [\r\n    {\r\n      \"t\": 1,\r\n      \"kind\": \"call\",\r\n      \"fn\": \"bubble_sort\",\r\n      \"args\": [\r\n        { \"name\": \"list\", \"value\": [5, 1, 7, 4, 3] },\r\n        { \"name\": \"n\", \"value\": 5 }\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 2,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 4 },\r\n      \"viz\": { \"i\": 4, \"list\": [5, 1, 7, 4, 3]}\r\n    },\r\n    {\r\n      \"t\": 3,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 4 },\r\n      \"viz\": { \"j\": 0 }\r\n    },\r\n    {\r\n      \"t\": 4,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[0]\", \"value\": 5 },\r\n        { \"ref\": \"list[1]\", \"value\": 1 }\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 5,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 4 },\r\n      \"viz\": { \"j\": 1 }\r\n    },\r\n    {\r\n      \"t\": 6,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[1]\", \"value\": 1 },\r\n        { \"ref\": \"list[2]\", \"value\": 7}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 7,\r\n      \"kind\": \"swap\",\r\n      \"target\": \"list\",\r\n      \"indices\": [1, 2],\r\n      \"before\": [1, 7],\r\n      \"after\": [7, 1],\r\n      \"viz\": { \"list\": [5, 7, 1, 4, 3] }\r\n    },\r\n    {\r\n      \"t\": 8,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 4 },\r\n      \"viz\": { \"j\": 2}\r\n    },\r\n    {\r\n      \"t\": 9,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[2]\", \"value\": 1},\r\n        { \"ref\": \"list[3]\", \"value\": 4 }\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 10,\r\n      \"kind\": \"swap\",\r\n      \"target\": \"list\",\r\n      \"indices\": [2, 3],\r\n      \"before\": [1, 4],\r\n      \"after\": [4, 1],\r\n      \"viz\": { \"list\": [5, 7, 4, 1, 3] }\r\n    },\r\n    {\r\n      \"t\": 11,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 3, \"total\": 4 },\r\n      \"viz\": { \"j\": 3}\r\n    },\r\n    {\r\n      \"t\": 12,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[3]\", \"value\":1},\r\n        { \"ref\": \"list[4]\", \"value\": 3}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 13,\r\n      \"kind\": \"swap\",\r\n      \"target\": \"list\",\r\n      \"indices\": [3, 4],\r\n      \"before\": [1, 3],\r\n      \"after\": [3, 1],\r\n      \"viz\": { \"list\": [5, 7, 4, 3, 1] }\r\n    },\r\n    {\r\n      \"t\": 14,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 4 },\r\n      \"viz\": { \"i\": 3, \"list\": [5, 7, 4, 3, 1]}\r\n    },\r\n    {\r\n      \"t\": 15,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 3},\r\n      \"viz\": { \"j\": 0 }\r\n    },\r\n    {\r\n      \"t\": 16,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[0]\", \"value\": 5 },\r\n        { \"ref\": \"list[1]\", \"value\":7}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 17,\r\n      \"kind\": \"swap\",\r\n      \"target\": \"list\",\r\n      \"indices\": [0, 1],\r\n      \"before\": [5, 7],\r\n      \"after\": [7, 5],\r\n      \"viz\": { \"list\": [7, 5, 4, 3, 1] }\r\n    },\r\n    {\r\n      \"t\": 18,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 3 },\r\n      \"viz\": { \"j\": 1 }\r\n    },\r\n    {\r\n      \"t\": 19,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[1]\", \"value\": 5 },\r\n        { \"ref\": \"list[2]\", \"value\": 4 }\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 20,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 3 },\r\n      \"viz\": { \"j\": 2}\r\n    },\r\n    {\r\n      \"t\": 21,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[2]\", \"value\": 4 },\r\n        { \"ref\": \"list[3]\", \"value\": 3}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 22,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 4 },\r\n      \"viz\": { \"i\": 2, \"list\": [7, 5, 4, 3, 1] }\r\n    },\r\n    {\r\n      \"t\": 23,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 2},\r\n      \"viz\": { \"j\": 0 }\r\n    },\r\n    {\r\n      \"t\": 24,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[0]\", \"value\": 7},\r\n        { \"ref\": \"list[1]\", \"value\": 5 }\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 25,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 2},\r\n      \"viz\": { \"j\": 1 }\r\n    },\r\n    {\r\n      \"t\": 26,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[1]\", \"value\": 5 },\r\n        { \"ref\": \"list[2]\", \"value\": 4 }\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 27,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 3, \"total\": 4 },\r\n      \"viz\": { \"i\": 1, \"list\": [7, 5, 4, 3, 1] }\r\n    },\r\n    {\r\n      \"t\": 28,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 1 },\r\n      \"viz\": { \"j\": 0 }\r\n    },\r\n    {\r\n      \"t\": 29,\r\n      \"kind\": \"compare\",\r\n      \"expr\": \"list[j] < list[j+1]\",\r\n      \"read\": [\r\n        { \"ref\": \"list[0]\", \"value\": 7},\r\n        { \"ref\": \"list[1]\", \"value\": 5 }\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 30,\r\n      \"kind\": \"return\",\r\n      \"fn\": \"bubble_sort\",\r\n      \"value\": null\r\n    },\r\n    {\r\n      \"t\": 31,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 5 }\r\n    },\r\n    {\r\n      \"t\": 32,\r\n      \"kind\": \"io\",\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"7\\n\"\r\n    },\r\n    {\r\n      \"t\": 33,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 5 }\r\n    },\r\n    {\r\n      \"t\": 34,\r\n      \"kind\": \"io\",\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"5\\n\"\r\n    },\r\n    {\r\n      \"t\": 35,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 5 }\r\n    },\r\n    {\r\n      \"t\": 36,\r\n      \"kind\": \"io\",\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"4\\n\"\r\n    },\r\n    {\r\n      \"t\": 37,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 3, \"total\": 5 }\r\n    },\r\n    {\r\n      \"t\": 38,\r\n      \"kind\": \"io\",\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"3\\n\"\r\n    },\r\n    {\r\n      \"t\": 39,\r\n      \"kind\": \"looplter\",\r\n      \"loop\": { \"type\": \"for\", \"iter\": 4, \"total\": 5 }\r\n    },\r\n    {\r\n      \"t\": 40,\r\n      \"kind\": \"io\",\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"1\\n\"\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "fibonacci.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"7\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(2^n)\",\r\n    \"spaceComplexity\": \"O(n)\",\r\n    \"opCounts\": {\r\n      \"call\": 25,\r\n      \"return\": 25,\r\n      \"compare\": 25,\r\n      \"branch\": 25,\r\n      \"assign\": 2,\r\n      \"io\": 2\r\n    }\r\n  },\r\n  \"events\": [\r\n    {\r\n      \"t\": 1,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 5},\r\n      \"dir\": \"in\",\r\n      \"channel\": \"stdin\",\r\n      \"data\": \"7\"\r\n    },\r\n    {\r\n      \"t\": 2,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 5},\r\n      \"var\": \"n\",\r\n      \"before\": null,\r\n      \"after\": 7\r\n    },\r\n    {\r\n      \"t\": 3,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 6},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 7}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 4,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 0\",\r\n      \"read\": [\r\n        {\"ref\": \"n\", \"value\": 7}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 5,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 1\",\r\n      \"read\": [\r\n        {\"ref\": \"n\", \"value\": 7}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 6,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 5}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 1,\r\n        \"callTree\": \"fibo(7) -> fibo(5)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 7,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 3}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 2,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(3)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 8,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 1}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 3,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(3) -> fibo(1)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 9,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 1\",\r\n      \"read\": [\r\n        {\"ref\": \"n\", \"value\": 1}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 10,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 1\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 11,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 1},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"t\": 12,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 2}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 3,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(3) -> fibo(2)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 13,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 0}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 4,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(3) -> fibo(2) -> fibo(0)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 14,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 0\",\r\n      \"read\": [\r\n        {\"ref\": \"n\", \"value\": 0}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 15,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 1},\r\n      \"expr\": \"n == 0\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 16,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 1},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 0\r\n    },\r\n    {\r\n      \"t\": 17,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 1}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 4,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(3) -> fibo(2) -> fibo(1)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 18,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 1},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 1\r\n    },\r\n    {\r\n      \"t\": 19,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 1,\r\n      \"viz\": {\r\n        \"note\": \"fibo(2) = fibo(0) + fibo(1) = 0 + 1\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 20,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 2,\r\n      \"viz\": {\r\n        \"note\": \"fibo(3) = fibo(1) + fibo(2) = 1 + 1\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 21,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 4}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 2,\r\n        \"callTree\": \"fibo(7) -> fibo(5) -> fibo(4)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 22,\r\n      \"kind\": \"note\",\r\n      \"loc\": {\"line\": 2},\r\n      \"text\": \"Similar recursive pattern: fibo(4) expands to fibo(2) + fibo(3), creating 5 more function calls\"\r\n    },\r\n    {\r\n      \"t\": 23,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 3,\r\n      \"viz\": {\r\n        \"note\": \"fibo(4) = 3\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 24,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 5,\r\n      \"viz\": {\r\n        \"note\": \"fibo(5) = fibo(3) + fibo(4) = 2 + 3\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 25,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"args\": [\r\n        {\"name\": \"n\", \"value\": 6}\r\n      ],\r\n      \"viz\": {\r\n        \"recursionDepth\": 1,\r\n        \"callTree\": \"fibo(7) -> fibo(6)\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 26,\r\n      \"kind\": \"note\",\r\n      \"loc\": {\"line\": 2},\r\n      \"text\": \"Similar recursive pattern: fibo(6) expands creating additional calls\"\r\n    },\r\n    {\r\n      \"t\": 27,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 8,\r\n      \"viz\": {\r\n        \"note\": \"fibo(6) = 8\"\r\n      }\r\n    },\r\n    {\r\n      \"t\": 28,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 2},\r\n      \"fn\": \"fibo\",\r\n      \"value\": 13,\r\n      \"viz\": {\r\n        \"note\": \"fibo(7) = fibo(5) + fibo(6) = 5 + 8\",\r\n        \"recursionTree\": {\r\n          \"root\": \"fibo(7)=13\",\r\n          \"left\": \"fibo(5)=5\",\r\n          \"right\": \"fibo(6)=8\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"t\": 29,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 6},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"13\"\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "graph.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(V^2 + E)\",\r\n    \"spaceComplexity\": \"O(V^2)\",\r\n    \"opCounts\": {\r\n      \"call\": 13,\r\n      \"return\": 13,\r\n      \"assign\": 6,\r\n      \"compare\": 6,\r\n      \"branch\": 6,\r\n      \"ds_op\": 10,\r\n      \"loopIter\": 8,\r\n      \"io\": 4,\r\n      \"note\": 1,\r\n      \"swap\": 0,\r\n      \"exception\": 0\r\n    }\r\n  },\r\n  \"events\": [\r\n    { \"t\": 1, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 54 }, \"fn\": \"malloc\", \"args\": [ { \"name\": \"size\", \"value\": 408 } ] },\r\n    { \"t\": 2, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 54 }, \"fn\": \"malloc\", \"value\": \"ptr0\" },\r\n    { \"t\": 3, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 54 }, \"var\": \"g\", \"before\": null, \"after\": \"ptr0\" },\r\n    { \"t\": 4, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 55 }, \"fn\": \"init\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" } ] },\r\n    { \"t\": 5, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 15 }, \"var\": \"g->n\", \"before\": null, \"after\": 0 },\r\n    { \"t\": 6, \"kind\": \"note\", \"loc\": { \"file\": \"main.c\", \"line\": 16 }, \"text\": \"Initialize g->adj_mat[0..49][0..49] = 0 (2500 cells via nested for-loops).\" },\r\n    { \"t\": 7, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 19 }, \"fn\": \"init\", \"value\": null },\r\n    { \"t\": 8, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 56 }, \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 4 } },\r\n    { \"t\": 9, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 57 }, \"fn\": \"insert_vertex\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"v\", \"value\": 0 } ] },\r\n    { \"t\": 10, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 24 }, \"expr\": \"(g->n + 1) > MAX_VERTICES\", \"read\": [ { \"ref\": \"g->n\", \"value\": 0 }, { \"ref\": \"MAX_VERTICES\", \"value\": 50 } ], \"result\": false },\r\n    { \"t\": 11, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 24 }, \"expr\": \"if (((g->n)+1)>MAX_VERTICES)\", \"result\": false },\r\n    { \"t\": 12, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 28 }, \"var\": \"g->n\", \"before\": 0, \"after\": 1 },\r\n    { \"t\": 13, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 29 }, \"fn\": \"insert_vertex\", \"value\": null },\r\n    { \"t\": 14, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 56 }, \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 4 } },\r\n    { \"t\": 15, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 57 }, \"fn\": \"insert_vertex\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"v\", \"value\": 1 } ] },\r\n    { \"t\": 16, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 28 }, \"var\": \"g->n\", \"before\": 1, \"after\": 2 },\r\n    { \"t\": 17, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 29 }, \"fn\": \"insert_vertex\", \"value\": null },\r\n    { \"t\": 18, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 56 }, \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 4 } },\r\n    { \"t\": 19, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 57 }, \"fn\": \"insert_vertex\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"v\", \"value\": 2 } ] },\r\n    { \"t\": 20, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 28 }, \"var\": \"g->n\", \"before\": 2, \"after\": 3 },\r\n    { \"t\": 21, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 29 }, \"fn\": \"insert_vertex\", \"value\": null },\r\n    { \"t\": 22, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 56 }, \"loop\": { \"type\": \"for\", \"iter\": 3, \"total\": 4 } },\r\n    { \"t\": 23, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 57 }, \"fn\": \"insert_vertex\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"v\", \"value\": 3 } ] },\r\n    { \"t\": 24, \"kind\": \"assign\", \"loc\": { \"file\": \"main.c\", \"line\": 28 }, \"var\": \"g->n\", \"before\": 3, \"after\": 4 },\r\n    { \"t\": 25, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 29 }, \"fn\": \"insert_vertex\", \"value\": null },\r\n    { \"t\": 26, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 58 }, \"fn\": \"insert_edge\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"start\", \"value\": 0 }, { \"name\": \"end\", \"value\": 1 } ] },\r\n    { \"t\": 27, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"(start>=g->n) || (end>=g->n)\", \"read\": [ { \"ref\": \"start\", \"value\": 0 }, { \"ref\": \"end\", \"value\": 1 }, { \"ref\": \"g->n\", \"value\": 4 } ], \"result\": false },\r\n    { \"t\": 28, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"if(start>=g->n||end>=g->n)\", \"result\": false },\r\n    { \"t\": 29, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 37 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 0, 1, 1 ] },\r\n    { \"t\": 30, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 38 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 1, 0, 1 ] },\r\n    { \"t\": 31, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 39 }, \"fn\": \"insert_edge\", \"value\": null },\r\n    { \"t\": 32, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 59 }, \"fn\": \"insert_edge\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"start\", \"value\": 0 }, { \"name\": \"end\", \"value\": 2 } ] },\r\n    { \"t\": 33, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"(start>=g->n) || (end>=g->n)\", \"read\": [ { \"ref\": \"start\", \"value\": 0 }, { \"ref\": \"end\", \"value\": 2 }, { \"ref\": \"g->n\", \"value\": 4 } ], \"result\": false },\r\n    { \"t\": 34, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"if(start>=g->n||end>=g->n)\", \"result\": false },\r\n    { \"t\": 35, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 37 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 0, 2, 1 ] },\r\n    { \"t\": 36, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 38 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 2, 0, 1 ] },\r\n    { \"t\": 37, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 39 }, \"fn\": \"insert_edge\", \"value\": null },\r\n    { \"t\": 38, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 60 }, \"fn\": \"insert_edge\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"start\", \"value\": 0 }, { \"name\": \"end\", \"value\": 3 } ] },\r\n    { \"t\": 39, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"(start>=g->n) || (end>=g->n)\", \"read\": [ { \"ref\": \"start\", \"value\": 0 }, { \"ref\": \"end\", \"value\": 3 }, { \"ref\": \"g->n\", \"value\": 4 } ], \"result\": false },\r\n    { \"t\": 40, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"if(start>=g->n||end>=g->n)\", \"result\": false },\r\n    { \"t\": 41, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 37 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 0, 3, 1 ] },\r\n    { \"t\": 42, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 38 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 3, 0, 1 ] },\r\n    { \"t\": 43, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 39 }, \"fn\": \"insert_edge\", \"value\": null },\r\n    { \"t\": 44, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 61 }, \"fn\": \"insert_edge\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"start\", \"value\": 1 }, { \"name\": \"end\", \"value\": 2 } ] },\r\n    { \"t\": 45, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"(start>=g->n) || (end>=g->n)\", \"read\": [ { \"ref\": \"start\", \"value\": 1 }, { \"ref\": \"end\", \"value\": 2 }, { \"ref\": \"g->n\", \"value\": 4 } ], \"result\": false },\r\n    { \"t\": 46, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"if(start>=g->n||end>=g->n)\", \"result\": false },\r\n    { \"t\": 47, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 37 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 1, 2, 1 ] },\r\n    { \"t\": 48, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 38 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 2, 1, 1 ] },\r\n    { \"t\": 49, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 39 }, \"fn\": \"insert_edge\", \"value\": null },\r\n    { \"t\": 50, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 62 }, \"fn\": \"insert_edge\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" }, { \"name\": \"start\", \"value\": 2 }, { \"name\": \"end\", \"value\": 3 } ] },\r\n    { \"t\": 51, \"kind\": \"compare\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"(start>=g->n) || (end>=g->n)\", \"read\": [ { \"ref\": \"start\", \"value\": 2 }, { \"ref\": \"end\", \"value\": 3 }, { \"ref\": \"g->n\", \"value\": 4 } ], \"result\": false },\r\n    { \"t\": 52, \"kind\": \"branch\", \"loc\": { \"file\": \"main.c\", \"line\": 33 }, \"expr\": \"if(start>=g->n||end>=g->n)\", \"result\": false },\r\n    { \"t\": 53, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 37 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 2, 3, 1 ] },\r\n    { \"t\": 54, \"kind\": \"ds_op\", \"loc\": { \"file\": \"main.c\", \"line\": 38 }, \"target\": \"g->adj_mat\", \"op\": \"set\", \"args\": [ 3, 2, 1 ] },\r\n    { \"t\": 55, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 39 }, \"fn\": \"insert_edge\", \"value\": null },\r\n    { \"t\": 56, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 63 }, \"fn\": \"print_adj_mat\", \"args\": [ { \"name\": \"g\", \"value\": \"ptr0\" } ] },\r\n    { \"t\": 57, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 43 }, \"loop\": { \"type\": \"for\", \"iter\": 0, \"total\": 4 } },\r\n    { \"t\": 58, \"kind\": \"io\", \"loc\": { \"file\": \"main.c\", \"line\": 47 }, \"dir\": \"out\", \"channel\": \"stdout\", \"data\": \" 0 1 1 1\\n\" },\r\n    { \"t\": 59, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 43 }, \"loop\": { \"type\": \"for\", \"iter\": 1, \"total\": 4 } },\r\n    { \"t\": 60, \"kind\": \"io\", \"loc\": { \"file\": \"main.c\", \"line\": 47 }, \"dir\": \"out\", \"channel\": \"stdout\", \"data\": \" 1 0 1 0\\n\" },\r\n    { \"t\": 61, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 43 }, \"loop\": { \"type\": \"for\", \"iter\": 2, \"total\": 4 } },\r\n    { \"t\": 62, \"kind\": \"io\", \"loc\": { \"file\": \"main.c\", \"line\": 47 }, \"dir\": \"out\", \"channel\": \"stdout\", \"data\": \" 1 1 0 1\\n\" },\r\n    { \"t\": 63, \"kind\": \"loopIter\", \"loc\": { \"file\": \"main.c\", \"line\": 43 }, \"loop\": { \"type\": \"for\", \"iter\": 3, \"total\": 4 } },\r\n    { \"t\": 64, \"kind\": \"io\", \"loc\": { \"file\": \"main.c\", \"line\": 47 }, \"dir\": \"out\", \"channel\": \"stdout\", \"data\": \" 1 0 1 0\\n\" },\r\n    { \"t\": 65, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 49 }, \"fn\": \"print_adj_mat\", \"value\": null },\r\n    { \"t\": 66, \"kind\": \"call\", \"loc\": { \"file\": \"main.c\", \"line\": 65 }, \"fn\": \"free\", \"args\": [ { \"name\": \"ptr\", \"value\": \"ptr0\" } ] },\r\n    { \"t\": 67, \"kind\": \"return\", \"loc\": { \"file\": \"main.c\", \"line\": 65 }, \"fn\": \"free\", \"value\": null }\r\n  ]\r\n}\r\n"
  },
  {
    "name": "heap.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(n log n)\",\r\n    \"spaceComplexity\": \"O(n)\",\r\n    \"opCounts\": {\r\n      \"call\": 7,\r\n      \"return\": 7,\r\n      \"assign\": 12,\r\n      \"compare\": 6,\r\n      \"ds_op\": 6\r\n    }\r\n  },\r\n  \"events\": [\r\n    {\r\n      \"t\": 1,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 41},\r\n      \"fn\": \"create\",\r\n      \"args\": []\r\n    },\r\n    {\r\n      \"t\": 2,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 41},\r\n      \"fn\": \"init\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 3,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 41},\r\n      \"var\": \"heap.size\",\r\n      \"before\": null,\r\n      \"after\": 0\r\n    },\r\n    {\r\n      \"t\": 4,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 41},\r\n      \"fn\": \"init\",\r\n      \"value\": null\r\n    },\r\n    {\r\n      \"t\": 5,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 44},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"},\r\n        {\"name\": \"item\", \"value\": 10}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 6,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 44},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 0,\r\n      \"after\": 1\r\n    },\r\n    {\r\n      \"t\": 7,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 44},\r\n      \"target\": \"heap\",\r\n      \"op\": \"insert\",\r\n      \"args\": [1, 10],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          {\"id\": \"1\", \"value\": 10, \"children\": []}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 8,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 44},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"value\": null\r\n    },\r\n    {\r\n      \"t\": 9,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 45},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"},\r\n        {\"name\": \"item\", \"value\": 5}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 10,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 45},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 1,\r\n      \"after\": 2\r\n    },\r\n    {\r\n      \"t\": 11,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 45},\r\n      \"target\": \"heap\",\r\n      \"op\": \"insert\",\r\n      \"args\": [2, 5],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          {\"id\": \"1\", \"value\": 10, \"children\": [2]},\r\n          {\"id\": \"2\", \"value\": 5, \"children\": []}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 12,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 45},\r\n      \"expr\": \"5 > parent(10)\",\r\n      \"read\": [\r\n        {\"ref\": \"item\", \"value\": 5},\r\n        {\"ref\": \"parent\", \"value\": 10}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 13,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 45},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"value\": null\r\n    },\r\n    {\r\n      \"t\": 14,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 46},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"},\r\n        {\"name\": \"item\", \"value\": 30}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 15,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 46},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 2,\r\n      \"after\": 3\r\n    },\r\n    {\r\n      \"t\": 16,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 46},\r\n      \"expr\": \"30 > parent(10)\",\r\n      \"read\": [\r\n        {\"ref\": \"item\", \"value\": 30},\r\n        {\"ref\": \"parent\", \"value\": 10}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 17,\r\n      \"kind\": \"swap\",\r\n      \"loc\": {\"line\": 46},\r\n      \"target\": \"heap\",\r\n      \"indices\": [1, 3],\r\n      \"before\": [10, 30],\r\n      \"after\": [30, 10]\r\n    },\r\n    {\r\n      \"t\": 18,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 46},\r\n      \"target\": \"heap\",\r\n      \"op\": \"insert\",\r\n      \"args\": [3, 30],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          {\"id\": \"1\", \"value\": 30, \"children\": [2, 3]},\r\n          {\"id\": \"2\", \"value\": 5, \"children\": []},\r\n          {\"id\": \"3\", \"value\": 10, \"children\": []}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 19,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 46},\r\n      \"fn\": \"insert_max_heap\",\r\n      \"value\": null\r\n    },\r\n    {\r\n      \"t\": 20,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 48},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 21,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 48},\r\n      \"var\": \"e4\",\r\n      \"before\": null,\r\n      \"after\": 30\r\n    },\r\n    {\r\n      \"t\": 22,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 48},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 3,\r\n      \"after\": 2\r\n    },\r\n    {\r\n      \"t\": 23,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 48},\r\n      \"expr\": \"10 < max_child(5)\",\r\n      \"read\": [\r\n        {\"ref\": \"temp\", \"value\": 10},\r\n        {\"ref\": \"max_child\", \"value\": 5}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 24,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 48},\r\n      \"target\": \"heap\",\r\n      \"op\": \"delete_max\",\r\n      \"args\": [],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          {\"id\": \"1\", \"value\": 10, \"children\": [2]},\r\n          {\"id\": \"2\", \"value\": 5, \"children\": []}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 25,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 48},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"value\": 30\r\n    },\r\n    {\r\n      \"t\": 26,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 49},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 27,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 49},\r\n      \"var\": \"e5\",\r\n      \"before\": null,\r\n      \"after\": 10\r\n    },\r\n    {\r\n      \"t\": 28,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 49},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 2,\r\n      \"after\": 1\r\n    },\r\n    {\r\n      \"t\": 29,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 49},\r\n      \"target\": \"heap\",\r\n      \"op\": \"delete_max\",\r\n      \"args\": [],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          {\"id\": \"1\", \"value\": 5, \"children\": []}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 30,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 49},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"value\": 10\r\n    },\r\n    {\r\n      \"t\": 31,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 50},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"args\": [\r\n        {\"name\": \"h\", \"value\": \"heap_ptr\"}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 32,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 50},\r\n      \"var\": \"e6\",\r\n      \"before\": null,\r\n      \"after\": 5\r\n    },\r\n    {\r\n      \"t\": 33,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 50},\r\n      \"var\": \"heap.size\",\r\n      \"before\": 1,\r\n      \"after\": 0\r\n    },\r\n    {\r\n      \"t\": 34,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 50},\r\n      \"target\": \"heap\",\r\n      \"op\": \"delete_max\",\r\n      \"args\": [],\r\n      \"viz\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": []\r\n      }\r\n    },\r\n    {\r\n      \"t\": 35,\r\n      \"kind\": \"return\",\r\n      \"loc\": {\"line\": 50},\r\n      \"fn\": \"delete_max_heap\",\r\n      \"value\": 5\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "linkedList.json",
    "type": "json",
    "code": "{\r\n  \"lang\": \"c\",\r\n  \"input\": \"3\\n5\\n7\\n0\",\r\n  \"analysis\": {\r\n    \"timeComplexity\": \"O(n)\",\r\n    \"spaceComplexity\": \"O(n)\",\r\n    \"opCounts\": {\r\n      \"assign\": 15,\r\n      \"compare\": 7,\r\n      \"call\": 3,\r\n      \"io\": 7,\r\n      \"ds_op\": 9\r\n    }\r\n  },\r\n  \"events\": [\r\n    {\r\n      \"t\": 1,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 15},\r\n      \"dir\": \"in\",\r\n      \"channel\": \"stdin\",\r\n      \"data\": \"3\"\r\n    },\r\n    {\r\n      \"t\": 2,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 15},\r\n      \"var\": \"readData\",\r\n      \"before\": null,\r\n      \"after\": 3\r\n    },\r\n    {\r\n      \"t\": 3,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"readData >= 1\",\r\n      \"read\": [\r\n        {\"ref\": \"readData\", \"value\": 3}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 4,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"readData >= 1\",\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 5,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"malloc\",\r\n      \"args\": [\r\n        {\"name\": \"size\", \"value\": 16}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 6,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 19},\r\n      \"var\": \"newNode\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 7,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 19},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x01\", 3],\r\n      \"viz\": {\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 3, \"next\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 8,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 21},\r\n      \"expr\": \"head == NULL\",\r\n      \"read\": [\r\n        {\"ref\": \"head\", \"value\": null}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 9,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 23},\r\n      \"var\": \"head\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 10,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 23},\r\n      \"var\": \"tail\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 11,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 15},\r\n      \"dir\": \"in\",\r\n      \"channel\": \"stdin\",\r\n      \"data\": \"5\"\r\n    },\r\n    {\r\n      \"t\": 12,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 15},\r\n      \"var\": \"readData\",\r\n      \"before\": 3,\r\n      \"after\": 5\r\n    },\r\n    {\r\n      \"t\": 13,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"readData >= 1\",\r\n      \"read\": [\r\n        {\"ref\": \"readData\", \"value\": 5}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 14,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"malloc\",\r\n      \"args\": [\r\n        {\"name\": \"size\", \"value\": 16}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 15,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 19},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x01\",\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 16,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 25},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x02\", 5],\r\n      \"viz\": {\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 3, \"next\": \"0x02\"},\r\n          {\"id\": \"0x02\", \"value\": 5, \"next\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 17,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 25},\r\n      \"var\": \"tail\",\r\n      \"before\": \"0x01\",\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 18,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 15},\r\n      \"dir\": \"in\",\r\n      \"channel\": \"stdin\",\r\n      \"data\": \"7\"\r\n    },\r\n    {\r\n      \"t\": 19,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 15},\r\n      \"var\": \"readData\",\r\n      \"before\": 5,\r\n      \"after\": 7\r\n    },\r\n    {\r\n      \"t\": 20,\r\n      \"kind\": \"call\",\r\n      \"loc\": {\"line\": 19},\r\n      \"fn\": \"malloc\",\r\n      \"args\": [\r\n        {\"name\": \"size\", \"value\": 16}\r\n      ]\r\n    },\r\n    {\r\n      \"t\": 21,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 19},\r\n      \"var\": \"newNode\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 22,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 25},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"insert\",\r\n      \"args\": [\"0x03\", 7],\r\n      \"viz\": {\r\n        \"nodes\": [\r\n          {\"id\": \"0x01\", \"value\": 3, \"next\": \"0x02\"},\r\n          {\"id\": \"0x02\", \"value\": 5, \"next\": \"0x03\"},\r\n          {\"id\": \"0x03\", \"value\": 7, \"next\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 23,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 25},\r\n      \"var\": \"tail\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 24,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 15},\r\n      \"dir\": \"in\",\r\n      \"channel\": \"stdin\",\r\n      \"data\": \"0\"\r\n    },\r\n    {\r\n      \"t\": 25,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 15},\r\n      \"var\": \"readData\",\r\n      \"before\": 7,\r\n      \"after\": 0\r\n    },\r\n    {\r\n      \"t\": 26,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"readData >= 1\",\r\n      \"read\": [\r\n        {\"ref\": \"readData\", \"value\": 0}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 27,\r\n      \"kind\": \"branch\",\r\n      \"loc\": {\"line\": 17},\r\n      \"expr\": \"readData >= 1\",\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 28,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 31},\r\n      \"var\": \"cur\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 29,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 32},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"3\"\r\n    },\r\n    {\r\n      \"t\": 30,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 34},\r\n      \"expr\": \"cur->next != NULL\",\r\n      \"read\": [\r\n        {\"ref\": \"cur->next\", \"value\": \"0x02\"}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 31,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 34},\r\n      \"var\": \"cur\",\r\n      \"before\": \"0x01\",\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 32,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 35},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"5\"\r\n    },\r\n    {\r\n      \"t\": 33,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 34},\r\n      \"expr\": \"cur->next != NULL\",\r\n      \"read\": [\r\n        {\"ref\": \"cur->next\", \"value\": \"0x03\"}\r\n      ],\r\n      \"result\": true\r\n    },\r\n    {\r\n      \"t\": 34,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 34},\r\n      \"var\": \"cur\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 35,\r\n      \"kind\": \"io\",\r\n      \"loc\": {\"line\": 35},\r\n      \"dir\": \"out\",\r\n      \"channel\": \"stdout\",\r\n      \"data\": \"7\"\r\n    },\r\n    {\r\n      \"t\": 36,\r\n      \"kind\": \"compare\",\r\n      \"loc\": {\"line\": 34},\r\n      \"expr\": \"cur->next != NULL\",\r\n      \"read\": [\r\n        {\"ref\": \"cur->next\", \"value\": null}\r\n      ],\r\n      \"result\": false\r\n    },\r\n    {\r\n      \"t\": 37,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 42},\r\n      \"var\": \"delNode\",\r\n      \"before\": null,\r\n      \"after\": \"0x01\"\r\n    },\r\n    {\r\n      \"t\": 38,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 42},\r\n      \"var\": \"delNextNode\",\r\n      \"before\": null,\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 39,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 45},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"delete\",\r\n      \"args\": [\"0x01\"],\r\n      \"viz\": {\r\n        \"nodes\": [\r\n          {\"id\": \"0x02\", \"value\": 5, \"next\": \"0x03\"},\r\n          {\"id\": \"0x03\", \"value\": 7, \"next\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 40,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 47},\r\n      \"var\": \"delNode\",\r\n      \"before\": \"0x01\",\r\n      \"after\": \"0x02\"\r\n    },\r\n    {\r\n      \"t\": 41,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 47},\r\n      \"var\": \"delNextNode\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 42,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 50},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"delete\",\r\n      \"args\": [\"0x02\"],\r\n      \"viz\": {\r\n        \"nodes\": [\r\n          {\"id\": \"0x03\", \"value\": 7, \"next\": null}\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"t\": 43,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 47},\r\n      \"var\": \"delNode\",\r\n      \"before\": \"0x02\",\r\n      \"after\": \"0x03\"\r\n    },\r\n    {\r\n      \"t\": 44,\r\n      \"kind\": \"assign\",\r\n      \"loc\": {\"line\": 47},\r\n      \"var\": \"delNextNode\",\r\n      \"before\": \"0x03\",\r\n      \"after\": null\r\n    },\r\n    {\r\n      \"t\": 45,\r\n      \"kind\": \"ds_op\",\r\n      \"loc\": {\"line\": 50},\r\n      \"target\": \"linkedList\",\r\n      \"op\": \"delete\",\r\n      \"args\": [\"0x03\"],\r\n      \"viz\": {\r\n        \"nodes\": []\r\n      }\r\n    }\r\n  ]\r\n}"
  }
];