// 이 파일은 스크립트에 의해 자동으로 생성되었습니다. 직접 수정하지 마세요.
export const jsonExamples = [
  {
    "name": "binaryTree.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"binary-tree\",\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"variables\": [\r\n    { \"name\": \"root\", \"type\": \"Node*\", \"initialValue\": \"NULL\", \"currentValue\": \"0x01\" },\r\n    { \"name\": \"newNode\", \"type\": \"Node*\", \"initialValue\": null, \"currentValue\": \"0x05\" }\r\n  ],\r\n  \"functions\": [\r\n    { \"name\": \"createNode\", \"params\": [\"data\"] },\r\n    { \"name\": \"insert\", \"params\": [\"root\", \"data\"] },\r\n    { \"name\": \"inorder\", \"params\": [\"root\"] }\r\n  ],\r\n  \"steps\": [\r\n    { \"line\": 29, \"description\": \"main 시작, root 초기화\", \"changes\": [{ \"variable\": \"root\", \"before\": \"NULL\", \"after\": \"NULL\" }] },\r\n    { \"line\": 30, \"description\": \"insert(root, 50) 호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 50] }] },\r\n    { \"line\": 17, \"description\": \"root == NULL, createNode(50) 호출\", \"stack\": [{ \"function\": \"createNode\", \"params\": [50] }] },\r\n    { \"line\": 11, \"description\": \"newNode 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": null, \"after\": \"0x01\" }], \"dataStructure\": { \"type\": \"bst\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 50, \"links\": [] }] } },\r\n    { \"line\": 13, \"description\": \"createNode 반환\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 50] }] },\r\n    { \"line\": 18, \"description\": \"insert 반환, root=0x01\", \"changes\": [{ \"variable\": \"root\", \"before\": \"NULL\", \"after\": \"0x01\" }] },\r\n    { \"line\": 31, \"description\": \"insert(root, 30) 호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 30] }] },\r\n    { \"line\": 19, \"description\": \"30 < 50, insert(root->left, 30) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 30] }] },\r\n    { \"line\": 17, \"description\": \"root==NULL, createNode(30) 호출\", \"stack\": [{ \"function\": \"createNode\", \"params\": [30] }] },\r\n    { \"line\": 11, \"description\": \"newNode 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x01\", \"after\": \"0x02\" }], \"dataStructure\": { \"type\": \"bst\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 50, \"links\": [\"0x02\"] }, { \"id\": \"0x02\", \"value\": 30, \"links\": [] }] } },\r\n    { \"line\": 13, \"description\": \"createNode 반환\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 30] }] },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->left=0x02\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 30] }] },\r\n    { \"line\": 22, \"description\": \"insert 반환\" },\r\n    { \"line\": 32, \"description\": \"insert(root, 70) 호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 70] }] },\r\n    { \"line\": 20, \"description\": \"70 > 50, insert(root->right, 70) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 70] }] },\r\n    { \"line\": 17, \"description\": \"root==NULL, createNode(70) 호출\", \"stack\": [{ \"function\": \"createNode\", \"params\": [70] }] },\r\n    { \"line\": 11, \"description\": \"newNode 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x02\", \"after\": \"0x03\" }], \"dataStructure\": { \"type\": \"bst\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 50, \"links\": [\"0x02\", \"0x03\"] }, { \"id\": \"0x02\", \"value\": 30, \"links\": [] }, { \"id\": \"0x03\", \"value\": 70, \"links\": [] }] } },\r\n    { \"line\": 13, \"description\": \"createNode 반환\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 70] }] },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->right=0x03\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 70] }] },\r\n    { \"line\": 22, \"description\": \"insert 반환\" },\r\n    { \"line\": 33, \"description\": \"insert(root, 20) 호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 20] }] },\r\n    { \"line\": 19, \"description\": \"20 < 50, insert(root->left, 20) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x02\", 20] }] },\r\n    { \"line\": 19, \"description\": \"20 < 30, insert(root->left, 20) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 20] }] },\r\n    { \"line\": 17, \"description\": \"root==NULL, createNode(20) 호출\", \"stack\": [{ \"function\": \"createNode\", \"params\": [20] }] },\r\n    { \"line\": 11, \"description\": \"newNode 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x03\", \"after\": \"0x04\" }], \"dataStructure\": { \"type\": \"bst\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 50, \"links\": [\"0x02\", \"0x03\"] }, { \"id\": \"0x02\", \"value\": 30, \"links\": [\"0x04\"] }, { \"id\": \"0x03\", \"value\": 70, \"links\": [] }, { \"id\": \"0x04\", \"value\": 20, \"links\": [] }] } },\r\n    { \"line\": 13, \"description\": \"createNode 반환\" },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->left=0x04\" },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->left=0x02\" },\r\n    { \"line\": 22, \"description\": \"insert 반환\" },\r\n    { \"line\": 34, \"description\": \"insert(root, 40) 호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x01\", 40] }] },\r\n    { \"line\": 19, \"description\": \"40 < 50, insert(root->left, 40) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"0x02\", 40] }] },\r\n    { \"line\": 20, \"description\": \"40 > 30, insert(root->right, 40) 재귀호출\", \"stack\": [{ \"function\": \"insert\", \"params\": [\"NULL\", 40] }] },\r\n    { \"line\": 17, \"description\": \"root==NULL, createNode(40) 호출\", \"stack\": [{ \"function\": \"createNode\", \"params\": [40] }] },\r\n    { \"line\": 11, \"description\": \"newNode 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x04\", \"after\": \"0x05\" }], \"dataStructure\": { \"type\": \"bst\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 50, \"links\": [\"0x02\", \"0x03\"] }, { \"id\": \"0x02\", \"value\": 30, \"links\": [\"0x04\", \"0x05\"] }, { \"id\": \"0x03\", \"value\": 70, \"links\": [] }, { \"id\": \"0x04\", \"value\": 20, \"links\": [] }, { \"id\": \"0x05\", \"value\": 40, \"links\": [] }] } },\r\n    { \"line\": 13, \"description\": \"createNode 반환\" },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->right=0x05\" },\r\n    { \"line\": 18, \"description\": \"재귀 insert 반환, root->left=0x02\" },\r\n    { \"line\": 22, \"description\": \"insert 반환\" },\r\n    { \"line\": 36, \"description\": \"printf(\\\"Inorder Traversal\\\")\" },\r\n    { \"line\": 37, \"description\": \"inorder(root) 호출\", \"stack\": [{ \"function\": \"inorder\", \"params\": [\"0x01\"] }] },\r\n    { \"line\": 25, \"description\": \"inorder(root->left) 호출\", \"stack\": [{ \"function\": \"inorder\", \"params\": [\"0x02\"] }] },\r\n    { \"line\": 25, \"description\": \"inorder(root->left) 호출\", \"stack\": [{ \"function\": \"inorder\", \"params\": [\"0x04\"] }] },\r\n    { \"line\": 25, \"description\": \"inorder(root->left=NULL), 반환\" },\r\n    { \"line\": 27, \"description\": \"출력: 20\" },\r\n    { \"line\": 28, \"description\": \"inorder(root->right=NULL), 반환\" },\r\n    { \"line\": 27, \"description\": \"출력: 30\" },\r\n    { \"line\": 28, \"description\": \"inorder(root->right) 호출\", \"stack\": [{ \"function\": \"inorder\", \"params\": [\"0x05\"] }] },\r\n    { \"line\": 25, \"description\": \"inorder(root->left=NULL), 반환\" },\r\n    { \"line\": 27, \"description\": \"출력: 40\" },\r\n    { \"line\": 28, \"description\": \"inorder(root->right=NULL), 반환\" },\r\n    { \"line\": 27, \"description\": \"출력: 50\" },\r\n    { \"line\": 28, \"description\": \"inorder(root->right) 호출\", \"stack\": [{ \"function\": \"inorder\", \"params\": [\"0x03\"] }] },\r\n    { \"line\": 25, \"description\": \"inorder(root->left=NULL), 반환\" },\r\n    { \"line\": 27, \"description\": \"출력: 70\" },\r\n    { \"line\": 28, \"description\": \"inorder(root->right=NULL), 반환\" },\r\n    { \"line\": 39, \"description\": \"main 종료\" }\r\n  ]\r\n}"
  },
  {
    "name": "bubbleSort.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"bubble-sort\",\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"variables\": [\r\n    { \"name\": \"MAX_SIZE\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 5 },\r\n    { \"name\": \"i\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 0 },\r\n    { \"name\": \"n\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 5 },\r\n    { \"name\": \"list\", \"type\": \"array\", \"initialValue\": null, \"currentValue\": [5, 1, 7, 4, 3] },\r\n    { \"name\": \"j\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 0 },\r\n    { \"name\": \"temp\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 0 }\r\n  ],\r\n  \"functions\": [\r\n    { \"name\": \"bubble_sort\", \"params\": [\"list\", \"n\"] }\r\n  ],\r\n  \"steps\": [\r\n    { \"line\": 21, \"description\": \"함수 bubble_sort 호출\", \"stack\": [{ \"function\": \"bubble_sort\", \"params\": [[5, 1, 7, 4, 3], 5] }] },\r\n    { \"line\": 8, \"description\": \"i=n-1로 초기화\", \"changes\": [{ \"variable\": \"i\", \"before\": null, \"after\": 4 }] },\r\n    { \"line\": 8, \"description\": \"i 조건 검사 (4>0)\", \"condition\": { \"expression\": \"i>0\", \"result\": true } },\r\n    { \"line\": 10, \"description\": \"j=0으로 초기화\", \"changes\": [{ \"variable\": \"j\", \"before\": null, \"after\": 0 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (0<4)\", \"condition\": { \"expression\": \"j<4\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[0]<list[1]: 5<1)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 0, \"after\": 1 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (1<4)\", \"condition\": { \"expression\": \"j<4\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[1]<list[2]: 1<7)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": true } },\r\n    { \"line\": 13, \"description\": \"temp=list[1]=1\", \"changes\": [{ \"variable\": \"temp\", \"before\": null, \"after\": 1 }] },\r\n    { \"line\": 14, \"description\": \"list[1]=list[2]=7\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 1, 7, 4, 3], \"after\": [5, 7, 7, 4, 3] }] },\r\n    { \"line\": 15, \"description\": \"list[2]=temp=1\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 7, 4, 3], \"after\": [5, 7, 1, 4, 3] }] },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 1, \"after\": 2 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (2<4)\", \"condition\": { \"expression\": \"j<4\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[2]<list[3]: 1<4)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": true } },\r\n    { \"line\": 13, \"description\": \"temp=list[2]=1\", \"changes\": [{ \"variable\": \"temp\", \"before\": 1, \"after\": 1 }] },\r\n    { \"line\": 14, \"description\": \"list[2]=list[3]=4\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 1, 4, 3], \"after\": [5, 7, 4, 4, 3] }] },\r\n    { \"line\": 15, \"description\": \"list[3]=temp=1\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 4, 4, 3], \"after\": [5, 7, 4, 1, 3] }] },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 2, \"after\": 3 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (3<4)\", \"condition\": { \"expression\": \"j<4\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[3]<list[4]: 1<3)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": true } },\r\n    { \"line\": 13, \"description\": \"temp=list[3]=1\", \"changes\": [{ \"variable\": \"temp\", \"before\": 1, \"after\": 1 }] },\r\n    { \"line\": 14, \"description\": \"list[3]=list[4]=3\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 4, 1, 3], \"after\": [5, 7, 4, 3, 3] }] },\r\n    { \"line\": 15, \"description\": \"list[4]=temp=1\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 4, 3, 3], \"after\": [5, 7, 4, 3, 1] }] },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 3, \"after\": 4 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (4<4)\", \"condition\": { \"expression\": \"j<4\", \"result\": false } },\r\n    { \"line\": 8, \"description\": \"i--\", \"changes\": [{ \"variable\": \"i\", \"before\": 4, \"after\": 3 }] },\r\n    { \"line\": 8, \"description\": \"i 조건 검사 (3>0)\", \"condition\": { \"expression\": \"i>0\", \"result\": true } },\r\n    { \"line\": 10, \"description\": \"j=0으로 초기화\", \"changes\": [{ \"variable\": \"j\", \"before\": 4, \"after\": 0 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (0<3)\", \"condition\": { \"expression\": \"j<3\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[0]<list[1]: 5<7)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": true } },\r\n    { \"line\": 13, \"description\": \"temp=list[0]=5\", \"changes\": [{ \"variable\": \"temp\", \"before\": 1, \"after\": 5 }] },\r\n    { \"line\": 14, \"description\": \"list[0]=list[1]=7\", \"changes\": [{ \"variable\": \"list\", \"before\": [5, 7, 4, 3, 1], \"after\": [7, 7, 4, 3, 1] }] },\r\n    { \"line\": 15, \"description\": \"list[1]=temp=5\", \"changes\": [{ \"variable\": \"list\", \"before\": [7, 7, 4, 3, 1], \"after\": [7, 5, 4, 3, 1] }] },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 0, \"after\": 1 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (1<3)\", \"condition\": { \"expression\": \"j<3\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[1]<list[2]: 5<4)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 1, \"after\": 2 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (2<3)\", \"condition\": { \"expression\": \"j<3\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[2]<list[3]: 4<3)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 2, \"after\": 3 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (3<3)\", \"condition\": { \"expression\": \"j<3\", \"result\": false } },\r\n    { \"line\": 8, \"description\": \"i--\", \"changes\": [{ \"variable\": \"i\", \"before\": 3, \"after\": 2 }] },\r\n    { \"line\": 8, \"description\": \"i 조건 검사 (2>0)\", \"condition\": { \"expression\": \"i>0\", \"result\": true } },\r\n    { \"line\": 10, \"description\": \"j=0으로 초기화\", \"changes\": [{ \"variable\": \"j\", \"before\": 3, \"after\": 0 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (0<2)\", \"condition\": { \"expression\": \"j<2\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[0]<list[1]: 7<5)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 0, \"after\": 1 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (1<2)\", \"condition\": { \"expression\": \"j<2\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[1]<list[2]: 5<4)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 1, \"after\": 2 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (2<2)\", \"condition\": { \"expression\": \"j<2\", \"result\": false } },\r\n    { \"line\": 8, \"description\": \"i--\", \"changes\": [{ \"variable\": \"i\", \"before\": 2, \"after\": 1 }] },\r\n    { \"line\": 8, \"description\": \"i 조건 검사 (1>0)\", \"condition\": { \"expression\": \"i>0\", \"result\": true } },\r\n    { \"line\": 10, \"description\": \"j=0으로 초기화\", \"changes\": [{ \"variable\": \"j\", \"before\": 2, \"after\": 0 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (0<1)\", \"condition\": { \"expression\": \"j<1\", \"result\": true } },\r\n    { \"line\": 12, \"description\": \"조건 검사 (list[0]<list[1]: 7<5)\", \"condition\": { \"expression\": \"list[j]<list[j+1]\", \"result\": false } },\r\n    { \"line\": 10, \"description\": \"j++\", \"changes\": [{ \"variable\": \"j\", \"before\": 0, \"after\": 1 }] },\r\n    { \"line\": 10, \"description\": \"j 조건 검사 (1<1)\", \"condition\": { \"expression\": \"j<1\", \"result\": false } },\r\n    { \"line\": 8, \"description\": \"i--\", \"changes\": [{ \"variable\": \"i\", \"before\": 1, \"after\": 0 }] },\r\n    { \"line\": 8, \"description\": \"i 조건 검사 (0>0)\", \"condition\": { \"expression\": \"i>0\", \"result\": false } },\r\n    { \"line\": 22, \"description\": \"함수 bubble_sort 반환\", \"stack\": [] },\r\n    { \"line\": 25, \"description\": \"정렬된 배열 출력 (list: [7, 5, 4, 3, 1])\" }\r\n  ]\r\n}"
  },
  {
    "name": "fibonacci.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"fibonacci-recursion\",\r\n  \"lang\": \"c\",\r\n  \"input\": \"7\",\r\n  \"variables\": [\r\n    { \"name\": \"n\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 7 }\r\n  ],\r\n  \"functions\": [\r\n    { \"name\": \"fibo\", \"params\": [\"n\"], \"called\": 25 }\r\n  ],\r\n  \"steps\": [\r\n    {\r\n      \"line\": 5,\r\n      \"description\": \"입력값 n을 사용자로부터 입력받음\",\r\n      \"changes\": [\r\n        { \"variable\": \"n\", \"before\": null, \"after\": 7 }\r\n      ]\r\n    },\r\n    {\r\n      \"line\": 6,\r\n      \"description\": \"fibo(7) 호출\",\r\n      \"changes\": [],\r\n      \"stack\": [\r\n        { \"function\": \"fibo\", \"params\": [7] }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"recursionTree\",\r\n        \"root\": {\r\n          \"id\": \"fibo(7)\",\r\n          \"value\": 13,\r\n          \"children\": [\r\n            {\r\n              \"id\": \"fibo(5)\",\r\n              \"value\": 5,\r\n              \"children\": [\r\n                {\r\n                  \"id\": \"fibo(3)\",\r\n                  \"value\": 2,\r\n                  \"children\": [\r\n                    {\r\n                      \"id\": \"fibo(1)\",\r\n                      \"value\": 1,\r\n                      \"children\": []\r\n                    },\r\n                    {\r\n                      \"id\": \"fibo(2)\",\r\n                      \"value\": 1,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(0)\",\r\n                          \"value\": 0,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"id\": \"fibo(4)\",\r\n                  \"value\": 3,\r\n                  \"children\": [\r\n                    {\r\n                      \"id\": \"fibo(2)\",\r\n                      \"value\": 1,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(0)\",\r\n                          \"value\": 0,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        }\r\n                      ]\r\n                    },\r\n                    {\r\n                      \"id\": \"fibo(3)\",\r\n                      \"value\": 2,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(2)\",\r\n                          \"value\": 1,\r\n                          \"children\": [\r\n                            {\r\n                              \"id\": \"fibo(0)\",\r\n                              \"value\": 0,\r\n                              \"children\": []\r\n                            },\r\n                            {\r\n                              \"id\": \"fibo(1)\",\r\n                              \"value\": 1,\r\n                              \"children\": []\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"id\": \"fibo(6)\",\r\n              \"value\": 8,\r\n              \"children\": [\r\n                {\r\n                  \"id\": \"fibo(4)\",\r\n                  \"value\": 3,\r\n                  \"children\": [\r\n                    {\r\n                      \"id\": \"fibo(2)\",\r\n                      \"value\": 1,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(0)\",\r\n                          \"value\": 0,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        }\r\n                      ]\r\n                    },\r\n                    {\r\n                      \"id\": \"fibo(3)\",\r\n                      \"value\": 2,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(2)\",\r\n                          \"value\": 1,\r\n                          \"children\": [\r\n                            {\r\n                              \"id\": \"fibo(0)\",\r\n                              \"value\": 0,\r\n                              \"children\": []\r\n                            },\r\n                            {\r\n                              \"id\": \"fibo(1)\",\r\n                              \"value\": 1,\r\n                              \"children\": []\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  \"id\": \"fibo(5)\",\r\n                  \"value\": 5,\r\n                  \"children\": [\r\n                    {\r\n                      \"id\": \"fibo(3)\",\r\n                      \"value\": 2,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(1)\",\r\n                          \"value\": 1,\r\n                          \"children\": []\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(2)\",\r\n                          \"value\": 1,\r\n                          \"children\": [\r\n                            {\r\n                              \"id\": \"fibo(0)\",\r\n                              \"value\": 0,\r\n                              \"children\": []\r\n                            },\r\n                            {\r\n                              \"id\": \"fibo(1)\",\r\n                              \"value\": 1,\r\n                              \"children\": []\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]\r\n                    },\r\n                    {\r\n                      \"id\": \"fibo(4)\",\r\n                      \"value\": 3,\r\n                      \"children\": [\r\n                        {\r\n                          \"id\": \"fibo(2)\",\r\n                          \"value\": 1,\r\n                          \"children\": [\r\n                            {\r\n                              \"id\": \"fibo(0)\",\r\n                              \"value\": 0,\r\n                              \"children\": []\r\n                            },\r\n                            {\r\n                              \"id\": \"fibo(1)\",\r\n                              \"value\": 1,\r\n                              \"children\": []\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          \"id\": \"fibo(3)\",\r\n                          \"value\": 2,\r\n                          \"children\": [\r\n                            {\r\n                              \"id\": \"fibo(1)\",\r\n                              \"value\": 1,\r\n                              \"children\": []\r\n                            },\r\n                            {\r\n                              \"id\": \"fibo(2)\",\r\n                              \"value\": 1,\r\n                              \"children\": [\r\n                                {\r\n                                  \"id\": \"fibo(0)\",\r\n                                  \"value\": 0,\r\n                                  \"children\": []\r\n                                },\r\n                                {\r\n                                  \"id\": \"fibo(1)\",\r\n                                  \"value\": 1,\r\n                                  \"children\": []\r\n                                }\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"line\": 6,\r\n      \"description\": \"fibo(7)의 결과를 출력\",\r\n      \"changes\": [],\r\n      \"stack\": []\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "graph.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"graph\",\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"variables\": [\r\n    { \"name\": \"g\", \"type\": \"graph\", \"initialValue\": \"empty\", \"currentValue\": \"adjacency matrix filled\" }\r\n  ],\r\n  \"functions\": [\r\n    { \"name\": \"init\", \"params\": [\"g\"], \"called\": 1 },\r\n    { \"name\": \"insert_vertex\", \"params\": [\"g\", \"v\"], \"called\": 4 },\r\n    { \"name\": \"insert_edge\", \"params\": [\"g\", \"start\", \"end\"], \"called\": 5 },\r\n    { \"name\": \"print_adj_mat\", \"params\": [\"g\"], \"called\": 1 }\r\n  ],\r\n  \"steps\": [\r\n    {\r\n      \"line\": 41,\r\n      \"description\": \"그래프 생성 및 초기화\",\r\n      \"changes\": [\r\n        { \"variable\": \"g\", \"before\": \"empty\", \"after\": \"n=0, adj_mat 초기화됨\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": []\r\n      }\r\n    },\r\n    {\r\n      \"line\": 43,\r\n      \"description\": \"정점 0 삽입 (n=1)\",\r\n      \"changes\": [\r\n        { \"variable\": \"g\", \"before\": \"n=0\", \"after\": \"n=1\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\"]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 43,\r\n      \"description\": \"정점 1 삽입 (n=2)\",\r\n      \"changes\": [\r\n        { \"variable\": \"g\", \"before\": \"n=1\", \"after\": \"n=2\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\"]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 43,\r\n      \"description\": \"정점 2 삽입 (n=3)\",\r\n      \"changes\": [\r\n        { \"variable\": \"g\", \"before\": \"n=2\", \"after\": \"n=3\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\"]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 43,\r\n      \"description\": \"정점 3 삽입 (n=4)\",\r\n      \"changes\": [\r\n        { \"variable\": \"g\", \"before\": \"n=3\", \"after\": \"n=4\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 44,\r\n      \"description\": \"간선 (0,1) 추가\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"edges\": [[\"0\", \"1\"]]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 45,\r\n      \"description\": \"간선 (0,2) 추가\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"edges\": [[\"0\", \"1\"], [\"0\", \"2\"]]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 46,\r\n      \"description\": \"간선 (0,3) 추가\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"edges\": [[\"0\", \"1\"], [\"0\", \"2\"], [\"0\", \"3\"]]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 47,\r\n      \"description\": \"간선 (1,2) 추가\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"edges\": [[\"0\", \"1\"], [\"0\", \"2\"], [\"0\", \"3\"], [\"1\", \"2\"]]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 48,\r\n      \"description\": \"간선 (2,3) 추가\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"edges\": [[\"0\", \"1\"], [\"0\", \"2\"], [\"0\", \"3\"], [\"1\", \"2\"], [\"2\", \"3\"]]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 49,\r\n      \"description\": \"인접 행렬 출력\",\r\n      \"changes\": [],\r\n      \"dataStructure\": {\r\n        \"type\": \"graph\",\r\n        \"nodes\": [\"0\", \"1\", \"2\", \"3\"],\r\n        \"adjacencyMatrix\": [\r\n          [0, 1, 1, 1],\r\n          [1, 0, 1, 0],\r\n          [1, 1, 0, 1],\r\n          [1, 0, 1, 0]\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "heap.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"heap\",\r\n  \"lang\": \"c\",\r\n  \"input\": \"\",\r\n  \"variables\": [\r\n    { \"name\": \"heap\", \"type\": \"heap\", \"initialValue\": \"empty\", \"currentValue\": \"empty\" },\r\n    { \"name\": \"e1\", \"type\": \"element\", \"initialValue\": \"{10}\", \"currentValue\": \"{10}\" },\r\n    { \"name\": \"e2\", \"type\": \"element\", \"initialValue\": \"{5}\", \"currentValue\": \"{5}\" },\r\n    { \"name\": \"e3\", \"type\": \"element\", \"initialValue\": \"{30}\", \"currentValue\": \"{30}\" },\r\n    { \"name\": \"e4\", \"type\": \"element\", \"initialValue\": \"undefined\", \"currentValue\": \"{30}\" },\r\n    { \"name\": \"e5\", \"type\": \"element\", \"initialValue\": \"undefined\", \"currentValue\": \"{10}\" },\r\n    { \"name\": \"e6\", \"type\": \"element\", \"initialValue\": \"undefined\", \"currentValue\": \"{5}\" }\r\n  ],\r\n  \"functions\": [\r\n    { \"name\": \"create\", \"params\": [], \"called\": 1 },\r\n    { \"name\": \"init\", \"params\": [\"h\"], \"called\": 1 },\r\n    { \"name\": \"insert_max_heap\", \"params\": [\"h\", \"item\"], \"called\": 3 },\r\n    { \"name\": \"delete_max_heap\", \"params\": [\"h\"], \"called\": 3 }\r\n  ],\r\n  \"steps\": [\r\n    {\r\n      \"line\": 41,\r\n      \"description\": \"힙 생성 및 초기화\",\r\n      \"changes\": [\r\n        { \"variable\": \"heap\", \"before\": \"empty\", \"after\": \"heap_size=0\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": []\r\n      }\r\n    },\r\n    {\r\n      \"line\": 44,\r\n      \"description\": \"10 삽입 (루트에 삽입)\",\r\n      \"changes\": [\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=0\", \"after\": \"heap_size=1\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          { \"id\": \"1\", \"value\": 10, \"links\": [] }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 45,\r\n      \"description\": \"5 삽입 (부모 10보다 작아 그대로 삽입)\",\r\n      \"changes\": [\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=1\", \"after\": \"heap_size=2\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          { \"id\": \"1\", \"value\": 10, \"links\": [\"2\"] },\r\n          { \"id\": \"2\", \"value\": 5, \"links\": [] }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 46,\r\n      \"description\": \"30 삽입 (부모 10보다 커서 루트로 승격)\",\r\n      \"changes\": [\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=2\", \"after\": \"heap_size=3\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          { \"id\": \"1\", \"value\": 30, \"links\": [\"2\", \"3\"] },\r\n          { \"id\": \"2\", \"value\": 5, \"links\": [] },\r\n          { \"id\": \"3\", \"value\": 10, \"links\": [] }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 48,\r\n      \"description\": \"첫 번째 삭제 (루트 30 삭제, 마지막 노드 10이 루트로 이동 후 재정렬)\",\r\n      \"changes\": [\r\n        { \"variable\": \"e4\", \"before\": \"undefined\", \"after\": \"{30}\" },\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=3\", \"after\": \"heap_size=2\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          { \"id\": \"1\", \"value\": 10, \"links\": [\"2\"] },\r\n          { \"id\": \"2\", \"value\": 5, \"links\": [] }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 49,\r\n      \"description\": \"두 번째 삭제 (루트 10 삭제, 마지막 노드 5가 루트로 이동)\",\r\n      \"changes\": [\r\n        { \"variable\": \"e5\", \"before\": \"undefined\", \"after\": \"{10}\" },\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=2\", \"after\": \"heap_size=1\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": [\r\n          { \"id\": \"1\", \"value\": 5, \"links\": [] }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      \"line\": 50,\r\n      \"description\": \"세 번째 삭제 (루트 5 삭제, 힙 비움)\",\r\n      \"changes\": [\r\n        { \"variable\": \"e6\", \"before\": \"undefined\", \"after\": \"{5}\" },\r\n        { \"variable\": \"heap\", \"before\": \"heap_size=1\", \"after\": \"heap_size=0\" }\r\n      ],\r\n      \"dataStructure\": {\r\n        \"type\": \"heap\",\r\n        \"nodes\": []\r\n      }\r\n    }\r\n  ]\r\n}"
  },
  {
    "name": "linkedList.json",
    "type": "json",
    "code": "{\r\n  \"algorithm\": \"linked-list\",\r\n  \"lang\": \"c\",\r\n  \"input\": [\"3\", \"5\", \"7\", \"0\"],\r\n  \"variables\": [\r\n    { \"name\": \"head\", \"type\": \"Node*\", \"initialValue\": \"NULL\", \"currentValue\": \"0x01\" },\r\n    { \"name\": \"tail\", \"type\": \"Node*\", \"initialValue\": \"NULL\", \"currentValue\": \"0x03\" },\r\n    { \"name\": \"cur\", \"type\": \"Node*\", \"initialValue\": \"NULL\", \"currentValue\": \"0x03\" },\r\n    { \"name\": \"newNode\", \"type\": \"Node*\", \"initialValue\": \"NULL\", \"currentValue\": \"0x03\" },\r\n    { \"name\": \"readData\", \"type\": \"int\", \"initialValue\": null, \"currentValue\": 0 },\r\n    { \"name\": \"delNode\", \"type\": \"Node*\", \"initialValue\": null, \"currentValue\": \"0x03\" },\r\n    { \"name\": \"delNextNode\", \"type\": \"Node*\", \"initialValue\": null, \"currentValue\": null }\r\n  ],\r\n  \"functions\": [],\r\n  \"steps\": [\r\n    { \"line\": 15, \"description\": \"scanf로 readData 입력받음\", \"changes\": [{ \"variable\": \"readData\", \"before\": null, \"after\": 3 }] },\r\n    { \"line\": 19, \"description\": \"readData>=1, malloc으로 새 노드 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"NULL\", \"after\": \"0x01\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [] }] } },\r\n    { \"line\": 23, \"description\": \"head == NULL, head와 tail을 newNode로 지정\", \"changes\": [{ \"variable\": \"head\", \"before\": \"NULL\", \"after\": \"0x01\" }, { \"variable\": \"tail\", \"before\": \"NULL\", \"after\": \"0x01\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [] }] } },\r\n    { \"line\": 15, \"description\": \"scanf로 readData 입력받음\", \"changes\": [{ \"variable\": \"readData\", \"before\": 3, \"after\": 5 }] },\r\n    { \"line\": 19, \"description\": \"readData>=1, malloc으로 새 노드 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x01\", \"after\": \"0x02\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [\"0x02\"] }, { \"id\": \"0x02\", \"value\": 5, \"links\": [] }] } },\r\n    { \"line\": 25, \"description\": \"head != NULL, tail->next에 newNode 연결 후 tail 갱신\", \"changes\": [{ \"variable\": \"tail\", \"before\": \"0x01\", \"after\": \"0x02\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [\"0x02\"] }, { \"id\": \"0x02\", \"value\": 5, \"links\": [] }] } },\r\n    { \"line\": 15, \"description\": \"scanf로 readData 입력받음\", \"changes\": [{ \"variable\": \"readData\", \"before\": 5, \"after\": 7 }] },\r\n    { \"line\": 19, \"description\": \"readData>=1, malloc으로 새 노드 생성 및 초기화\", \"changes\": [{ \"variable\": \"newNode\", \"before\": \"0x02\", \"after\": \"0x03\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [\"0x02\"] }, { \"id\": \"0x02\", \"value\": 5, \"links\": [\"0x03\"] }, { \"id\": \"0x03\", \"value\": 7, \"links\": [] }] } },\r\n    { \"line\": 25, \"description\": \"head != NULL, tail->next에 newNode 연결 후 tail 갱신\", \"changes\": [{ \"variable\": \"tail\", \"before\": \"0x02\", \"after\": \"0x03\" }], \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x01\", \"value\": 3, \"links\": [\"0x02\"] }, { \"id\": \"0x02\", \"value\": 5, \"links\": [\"0x03\"] }, { \"id\": \"0x03\", \"value\": 7, \"links\": [] }] } },\r\n    { \"line\": 15, \"description\": \"scanf로 readData 입력받음\", \"changes\": [{ \"variable\": \"readData\", \"before\": 7, \"after\": 0 }] },\r\n    { \"line\": 17, \"description\": \"readData<1, while문 탈출\" },\r\n    { \"line\": 31, \"description\": \"head != NULL, cur을 head로 지정\", \"changes\": [{ \"variable\": \"cur\", \"before\": \"NULL\", \"after\": \"0x01\" }] },\r\n    { \"line\": 32, \"description\": \"첫 번째 노드 출력: 3\" },\r\n    { \"line\": 34, \"description\": \"cur->next != NULL, cur을 다음 노드로 이동\", \"changes\": [{ \"variable\": \"cur\", \"before\": \"0x01\", \"after\": \"0x02\" }] },\r\n    { \"line\": 35, \"description\": \"데이터 출력: 5\" },\r\n    { \"line\": 34, \"description\": \"cur->next != NULL, cur을 다음 노드로 이동\", \"changes\": [{ \"variable\": \"cur\", \"before\": \"0x02\", \"after\": \"0x03\" }] },\r\n    { \"line\": 35, \"description\": \"데이터 출력: 7\" },\r\n    { \"line\": 34, \"description\": \"cur->next == NULL, 출력 종료\" },\r\n    { \"line\": 42, \"description\": \"head != NULL, 삭제 단계 진입. delNode=head, delNextNode=head->next 지정\", \"changes\": [{ \"variable\": \"delNode\", \"before\": null, \"after\": \"0x01\" }, { \"variable\": \"delNextNode\", \"before\": null, \"after\": \"0x02\" }] },\r\n    { \"line\": 45, \"description\": \"첫 번째 노드(3) 삭제\", \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x02\", \"value\": 5, \"links\": [\"0x03\"] }, { \"id\": \"0x03\", \"value\": 7, \"links\": [] }] } },\r\n    { \"line\": 47, \"description\": \"두 번째 노드 존재, 삭제 준비. delNode=delNextNode, delNextNode=delNextNode->next\", \"changes\": [{ \"variable\": \"delNode\", \"before\": \"0x01\", \"after\": \"0x02\" }, { \"variable\": \"delNextNode\", \"before\": \"0x02\", \"after\": \"0x03\" }] },\r\n    { \"line\": 50, \"description\": \"두 번째 노드(5) 삭제\", \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [{ \"id\": \"0x03\", \"value\": 7, \"links\": [] }] } },\r\n    { \"line\": 47, \"description\": \"세 번째 노드 존재, 삭제 준비. delNode=delNextNode, delNextNode=delNextNode->next\", \"changes\": [{ \"variable\": \"delNode\", \"before\": \"0x02\", \"after\": \"0x03\" }, { \"variable\": \"delNextNode\", \"before\": \"0x03\", \"after\": null }] },\r\n    { \"line\": 50, \"description\": \"세 번째 노드(7) 삭제\", \"dataStructure\": { \"type\": \"linkedList\", \"nodes\": [] } },\r\n    { \"line\": 54, \"description\": \"프로그램 종료\" }\r\n  ]\r\n}"
  }
];